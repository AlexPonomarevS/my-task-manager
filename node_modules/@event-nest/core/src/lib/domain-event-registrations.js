"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEventClass = getEventClass;
exports.getEventName = getEventName;
exports.isRegistered = isRegistered;
exports.registerEvent = registerEvent;
const event_name_conflict_exception_1 = require("./exceptions/event-name-conflict-exception");
const type_utils_1 = require("./utils/type-utils");
const registrations = [];
/**
 * Returns the class that matches the provided name. Or undefined.
 * @param name The event name to be checked.
 */
function getEventClass(name) {
    const found = registrations.find((registration) => registration.eventName === name);
    return (0, type_utils_1.isNil)(found) ? undefined : found.eventClass;
}
/**
 * Returns the event name that matches the class of the provided object.
 * @param target
 */
function getEventName(target) {
    const found = registrations.find((registration) => registration.eventClass === target.constructor);
    return found ? found.eventName : undefined;
}
function isRegistered(event) {
    return !(0, type_utils_1.isNil)(getEventName(event));
}
function registerEvent(newRegistration) {
    if (registrations.some((registration) => registration.eventName === newRegistration.eventName)) {
        throw new event_name_conflict_exception_1.EventNameConflictException(newRegistration.eventName);
    }
    registrations.push(newRegistration);
}
//# sourceMappingURL=domain-event-registrations.js.map