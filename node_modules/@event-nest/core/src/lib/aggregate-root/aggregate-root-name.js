"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregateRootName = void 0;
exports.getAggregateRootName = getAggregateRootName;
require("reflect-metadata");
const metadata_keys_1 = require("../metadata-keys");
/**
 * A decorator to mark an aggregate root class with a unique name. The name will
 * be saved with each event in the database.
 *
 * It will also be used during the retrieval process of the events to make sure that
 * the correct events are retrieved.
 * @param name The name of the aggregate root
 * @constructor
 */
const AggregateRootName = (name) => {
    return (target) => {
        Reflect.defineMetadata(metadata_keys_1.AGGREGATE_ROOT_NAME_KEY, { aggregateRootName: name }, target);
    };
};
exports.AggregateRootName = AggregateRootName;
// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type
function getAggregateRootName(targetClass) {
    return Reflect.getMetadata(metadata_keys_1.AGGREGATE_ROOT_NAME_KEY, targetClass)?.aggregateRootName;
}
//# sourceMappingURL=aggregate-root-name.js.map